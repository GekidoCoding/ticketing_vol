
CREATE TABLE TICKETING_CLASSE (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NOM VARCHAR2(20) UNIQUE
);

CREATE TABLE TICKETING_STATUT_RESERVATION (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NOM VARCHAR2(20) UNIQUE
);

CREATE TABLE TICKETING_UTILISATEUR (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    USERNAME VARCHAR2(50) UNIQUE,
    PASSWORD VARCHAR2(50),
    NOM VARCHAR2(100),
    PRENOM VARCHAR2(100),
    DTN DATE
);

CREATE TABLE TICKETING_ADMIN (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    USERNAME VARCHAR2(50) UNIQUE,
    PASSWORD VARCHAR2(50)
);

CREATE TABLE TICKETING_COMPANY (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NOM VARCHAR2(100)
);

CREATE TABLE TICKETING_AVION (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    MODELE VARCHAR2(100),
    COMPANY_ID NUMBER,
    DATE_FABRICATION DATE
);

CREATE TABLE TICKETING_SIEGE(
     ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
     AVION_ID NUMBER,
     NBR INTEGER ,
     CLASSE_ID NUMBER , 
     PRIX DOUBLE PRECISION
);

CREATE TABLE TICKETING_VILLE (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NOM VARCHAR2(100) UNIQUE
);

CREATE TABLE TICKETING_VOL (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    AVION_ID NUMBER,
    VILLE_DEPART_ID NUMBER,
    VILLE_ARRIVEE_ID NUMBER,
    DATE_HEURE_DEPART TIMESTAMP
);

CREATE TABLE TICKETING_PROMOTION (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    VOL_ID NUMBER,
    CLASSE_ID NUMBER,
    NBR_SIEGE INTEGER,
    REDUCTION DOUBLE PRECISION,
    PRIX DOUBLE PRECISION,
    DATE_BUTOIRE DATE,
    NBR_SIEGE_DISPO INTEGER
);

CREATE TABLE TICKETING_CATEGORIE_AGE (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NOM VARCHAR2(50) UNIQUE, 
    BORNE_MIN INTEGER,
    BORNE_MAX INTEGER,
    POURCENTAGE_PAYER DOUBLE PRECISION
);

CREATE TABLE TICKETING_RESERVATION (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    UTILISATEUR_ID NUMBER,
    VOL_ID NUMBER,
    DATE_RESERVATION DATE,
    STATUT_ID NUMBER,
    CATEGORIE_AGE_ID NUMBER,
    NB_SIEGES INTEGER DEFAULT 0,
    CLASSE_ID NUMBER,
    PRIX DOUBLE PRECISION
);

CREATE TABLE TICKETING_PROMO_RESERVATION(
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    RESERVATION_ID NUMBER ,
    PROMOTION_ID NUMBER ,
    NB_SIEGES_PROMO INTEGER
);


ALTER TABLE TICKETING_PROMO_RESERVATION
    ADD CONSTRAINT FK_PROMO_RESERVATION FOREIGN KEY (RESERVATION_ID)
    REFERENCES TICKETING_RESERVATION(ID);

ALTER TABLE TICKETING_PROMO_RESERVATION
    ADD CONSTRAINT FK_PROMO_PROMOTION FOREIGN KEY (PROMOTION_ID)
    REFERENCES TICKETING_PROMOTION(ID);

ALTER TABLE TICKETING_AVION
    ADD CONSTRAINT FK_AVION_COMPANY FOREIGN KEY (COMPANY_ID)
    REFERENCES TICKETING_COMPANY(ID);

ALTER TABLE TICKETING_VOL
    ADD CONSTRAINT FK_VOL_AVION FOREIGN KEY (AVION_ID)
    REFERENCES TICKETING_AVION(ID);

ALTER TABLE TICKETING_VOL
    ADD CONSTRAINT FK_VOL_VILLE_DEPART FOREIGN KEY (VILLE_DEPART_ID)
    REFERENCES TICKETING_VILLE(ID);

ALTER TABLE TICKETING_VOL
    ADD CONSTRAINT FK_VOL_VILLE_ARRIVEE FOREIGN KEY (VILLE_ARRIVEE_ID)
    REFERENCES TICKETING_VILLE(ID);

ALTER TABLE TICKETING_PROMOTION
    ADD CONSTRAINT FK_PROMOTION_VOL FOREIGN KEY (VOL_ID)
    REFERENCES TICKETING_VOL(ID);

ALTER TABLE TICKETING_PROMOTION
    ADD CONSTRAINT FK_PROMOTION_CLASSE FOREIGN KEY (CLASSE_ID)
    REFERENCES TICKETING_CLASSE(ID);

ALTER TABLE TICKETING_RESERVATION
    ADD CONSTRAINT FK_RESERVATION_UTILISATEUR FOREIGN KEY (UTILISATEUR_ID)
    REFERENCES TICKETING_UTILISATEUR(ID);

ALTER TABLE TICKETING_RESERVATION
    ADD CONSTRAINT FK_RESERVATION_VOL FOREIGN KEY (VOL_ID)
    REFERENCES TICKETING_VOL(ID);

ALTER TABLE TICKETING_RESERVATION
    ADD CONSTRAINT FK_RESERVATION_STATUT FOREIGN KEY (STATUT_ID)
    REFERENCES TICKETING_STATUT_RESERVATION(ID);

ALTER TABLE TICKETING_RESERVATION
    ADD CONSTRAINT FK_RESERVATION_CATEGORIE_AGE FOREIGN KEY (CATEGORIE_AGE_ID)
    REFERENCES TICKETING_CATEGORIE_AGE(ID);

ALTER TABLE TICKETING_RESERVATION
    ADD CONSTRAINT FK_RESERVATION_PROMOTION FOREIGN KEY (PROMOTION_ID)
    REFERENCES TICKETING_PROMOTION(ID);


ALTER TABLE TICKETING_RESERVATION
    ADD CONSTRAINT FK_RESERVATION_CLASSE FOREIGN KEY (CLASSE_ID)
    REFERENCES TICKETING_CLASSE(ID);

COMMIT;